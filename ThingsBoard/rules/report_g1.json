{
  "ruleChain": {
    "additionalInfo": null,
    "name": "Report G1",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 5,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 51,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode",
        "name": "Daily Report",
        "debugMode": true,
        "configuration": {
          "msgCount": 0,
          "periodInSeconds": 3600,
          "originatorId": "ef297280-91e5-11e9-a444-f17d9b7c69b1",
          "originatorType": "ASSET",
          "jsScript": "return { msg: {}, metadata: {}, msgType: 'POST_TELEMETRY_REQUEST' };"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 326,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Report Configuration",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "reportTime",
            "workers"
          ],
          "latestTsKeyNames": [
            "lastReportDate"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1150,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Prepare Split Messages",
        "debugMode": true,
        "configuration": {
          "jsScript": "var now = new Date();\nvar workers = JSON.parse(metadata.ss_workers || '{}');\nvar msgs = [];\n\n// Workers\nfor (var worker_id in workers) {\n    msgs.push({ \n        name: workers[worker_id].name,\n        type: 'WORKER'\n    });\n}\n\n// G1\nmsgs.push({ \n    name: 'G1',\n    type: 'GROUP'\n});\n\nmetadata.msgs = JSON.stringify(msgs);\n// Report\n// Daily\n//metadata.reportDate = (new Date(now.getFullYear(), now.getMonth(), now.getDate())).getTime();\n//metadata.reportStart = metadata.reportDate - (1000*60*60*24);\n//metadata.reportEnd = metadata.reportDate;\n// Hourly\nmetadata.reportDate = (new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours())).getTime();\nmetadata.reportStart = metadata.reportDate - (1000*60*60);\nmetadata.reportEnd = metadata.reportDate;\n// Minutely  \n//metadata.reportDate = (new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes())).getTime();\n//metadata.reportStart = metadata.reportDate - (1000*60);\n//metadata.reportEnd = metadata.reportDate;\n\nmetadata.originatorRule = 'Report_G1';\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 601,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Report Time",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (!metadata.ss_reportTime) {\n    return false;\n}\n\nvar arrReportTime = metadata.ss_reportTime.split(':');\nvar now = new Date();\nvar reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(arrReportTime[0]), parseInt(arrReportTime[1]));\n\nreturn now > reportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 876,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Last Report Date",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (!metadata.lastReportDate) {\n    return true;\n}\n\nvar now = new Date();\nvar lastReportDate = new Date(parseInt(metadata.lastReportDate));\n// Daily\n//var reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n// Hourly\nvar reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours());\n// Minutely  \n//var reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes());\n\nreturn reportDate > lastReportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 324,
          "layoutY": 149
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Check Split",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (metadata.split === \"true\") {\n    return ['Split', 'Execute'];\n}\n\nreturn [];"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 601,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Metadata",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.targetDeviceName = msg.name;\nmetadata.targetDeviceType = msg.type;\nmetadata.lastReportDate = \"0\";\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 876,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateRelationNode",
        "name": "Change Originator",
        "debugMode": true,
        "configuration": {
          "direction": "TO",
          "relationType": "META",
          "entityType": "ASSET",
          "entityNamePattern": "${targetDeviceName}",
          "entityTypePattern": "${targetDeviceType}",
          "entityCacheExpiration": 300,
          "createEntityIfNotExists": false,
          "changeOriginatorToRelatedEntity": true,
          "removeCurrentRelations": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1699,
          "layoutY": 149
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Switch Type",
        "debugMode": true,
        "configuration": {
          "jsScript": "return msg.type;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1150,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Report Attributes",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [],
          "latestTsKeyNames": [
            "lastReportDate"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1425,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Last Report Date",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (!metadata.lastReportDate) {\n    return true;\n}\n\nvar lastReportDate = parseInt(metadata.lastReportDate);\nvar reportDate = parseInt(metadata.reportDate);\n\nreturn reportDate > lastReportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1976,
          "layoutY": 100
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetTelemetryNode",
        "name": "Get Worker Telemetry",
        "debugMode": true,
        "configuration": {
          "startInterval": 2,
          "endInterval": 1,
          "startIntervalPattern": "${reportStart}",
          "endIntervalPattern": "${reportEnd}",
          "useMetadataIntervalPatterns": true,
          "startIntervalTimeUnit": "MINUTES",
          "endIntervalTimeUnit": "MINUTES",
          "fetchMode": "LAST",
          "orderBy": "ASC",
          "latestTsKeyNames": [
            "in_count",
            "success_count",
            "fail_count"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1975,
          "layoutY": 201
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetTelemetryNode",
        "name": "Get Group Telemetry",
        "debugMode": true,
        "configuration": {
          "startInterval": 2,
          "endInterval": 1,
          "startIntervalPattern": "${reportStart}",
          "endIntervalPattern": "${reportEnd}",
          "useMetadataIntervalPatterns": true,
          "startIntervalTimeUnit": "MINUTES",
          "endIntervalTimeUnit": "MINUTES",
          "fetchMode": "LAST",
          "orderBy": "ASC",
          "latestTsKeyNames": [
            "all_in_count",
            "all_success_count",
            "all_fail_count"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2249,
          "layoutY": 101
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Message",
        "debugMode": true,
        "configuration": {
          "jsScript": "msg = {\n    hourly_in_count: parseInt((metadata.in_count||'0').replace(/\\\"/g, '')),\n    hourly_success_count: parseInt((metadata.success_count||'0').replace(/\\\"/g, '')),\n    hourly_fail_count: parseInt((metadata.fail_count||'0').replace(/\\\"/g, '')),\n    lastReportDate: Date.now()\n};\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2251,
          "layoutY": 200
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Message",
        "debugMode": true,
        "configuration": {
          "jsScript": "msg = {\n    hourly_all_in_count: parseInt((metadata.all_in_count||'0').replace(/\\\"/g, '')),\n    hourly_all_success_count: parseInt((metadata.all_success_count||'0').replace(/\\\"/g, '')),\n    hourly_all_fail_count: parseInt((metadata.all_fail_count||'0').replace(/\\\"/g, '')),\n    lastReportDate: Date.now()\n};\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2525,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Telemetry",
        "debugMode": true,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1975,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "Change to Metadata",
        "debugMode": true,
        "configuration": {
          "originatorSource": "RELATED",
          "relationsQuery": {
            "direction": "TO",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "META",
                "entityTypes": [
                  "ASSET"
                ]
              }
            ]
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2251,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Last Report Date",
        "debugMode": true,
        "configuration": {
          "jsScript": "msg = {\n    lastReportDate: Date.now()\n};\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2526,
          "layoutY": 349
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Last Report Date",
        "debugMode": true,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1700,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Last Message",
        "debugMode": true,
        "configuration": {
          "jsScript": "var msgs = JSON.parse(metadata.msgs);\n\nreturn msgs.length===0;"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "Success"
      },
      {
        "fromIndex": 1,
        "toIndex": 3,
        "type": "Failure"
      },
      {
        "fromIndex": 1,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 3,
        "toIndex": 4,
        "type": "True"
      },
      {
        "fromIndex": 4,
        "toIndex": 2,
        "type": "True"
      },
      {
        "fromIndex": 5,
        "toIndex": 6,
        "type": "Execute"
      },
      {
        "fromIndex": 6,
        "toIndex": 7,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 9,
        "type": "Success"
      },
      {
        "fromIndex": 8,
        "toIndex": 12,
        "type": "GROUP"
      },
      {
        "fromIndex": 8,
        "toIndex": 11,
        "type": "WORKER"
      },
      {
        "fromIndex": 9,
        "toIndex": 10,
        "type": "Failure"
      },
      {
        "fromIndex": 9,
        "toIndex": 10,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 8,
        "type": "True"
      },
      {
        "fromIndex": 11,
        "toIndex": 13,
        "type": "Success"
      },
      {
        "fromIndex": 12,
        "toIndex": 14,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 15,
        "type": "Success"
      },
      {
        "fromIndex": 14,
        "toIndex": 15,
        "type": "Success"
      },
      {
        "fromIndex": 15,
        "toIndex": 19,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 17,
        "type": "Success"
      },
      {
        "fromIndex": 17,
        "toIndex": 18,
        "type": "Success"
      },
      {
        "fromIndex": 19,
        "toIndex": 16,
        "type": "True"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 2,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "6728ba90-91a3-11e9-a444-f17d9b7c69b1"
        },
        "additionalInfo": {
          "layoutX": 1426,
          "layoutY": 349,
          "ruleChainNodeId": "rule-chain-node-22"
        },
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "6728ba90-91a3-11e9-a444-f17d9b7c69b1"
        },
        "additionalInfo": {
          "layoutX": 600,
          "layoutY": 250,
          "ruleChainNodeId": "rule-chain-node-23"
        },
        "type": "Split"
      }
    ]
  }
}