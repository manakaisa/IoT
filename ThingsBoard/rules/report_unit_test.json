{
  "ruleChain": {
    "additionalInfo": {
      "description": "- Generate periodic latest data for Unit Test"
    },
    "name": "Report Unit Test",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": null,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 51,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Report Metadata",
        "debugMode": false,
        "configuration": {
          "jsScript": "var now = new Date();\n\n// Daily\n//metadata.reportDate = (new Date(now.getFullYear(), now.getMonth(), now.getDate())).getTime();\n//metadata.reportStart = metadata.reportDate - (1000*60*60*24);\n//metadata.reportEnd = metadata.reportDate;\n// Hourly\n//metadata.reportDate = (new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours())).getTime();\n//metadata.reportStart = metadata.reportDate - (1000*60*60);\n//metadata.reportEnd = metadata.reportDate;\n// Minutely  \nmetadata.reportDate = (new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes())).getTime();\nmetadata.reportStart = metadata.reportDate - (1000*60);\nmetadata.reportEnd = metadata.reportDate;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 324,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Switch Report Type",
        "debugMode": false,
        "configuration": {
          "jsScript": "return ['Report Unit Test', 'Report Metadata'];"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 49,
          "layoutY": 251
        },
        "type": "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode",
        "name": "Schedule Report",
        "debugMode": false,
        "configuration": {
          "msgCount": 0,
          "periodInSeconds": 60,
          "originatorId": "eba1af10-afa4-11e9-b546-57b55a0f7f3e",
          "originatorType": "ASSET",
          "jsScript": "var msg = {\n    reset: true\n};\nvar metadata = {};\n\nreturn { msg: msg, metadata: metadata, msgType: 'POST_TELEMETRY_REQUEST' };"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 325,
          "layoutY": 252
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Configuration",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "reportTime"
          ],
          "latestTsKeyNames": [
            "lastReportDateUnitTest"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 601,
          "layoutY": 250
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Report Time",
        "debugMode": false,
        "configuration": {
          "jsScript": "if (!metadata.ss_reportTime) {\n    return false;\n}\n\nvar arrReportTime = metadata.ss_reportTime.split(':');\nvar now = new Date();\nvar reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(arrReportTime[0]), parseInt(arrReportTime[1]));\n\nreturn now > reportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 876,
          "layoutY": 249
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Last Report Date",
        "debugMode": false,
        "configuration": {
          "jsScript": "if (!metadata.lastReportDateUnitTest) {\n    return true;\n}\n\nvar now = new Date();\nvar lastReportDate = new Date(parseInt(metadata.lastReportDateUnitTest));\n// Daily\n//var reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n// Hourly\n//var reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours());\n// Minutely  \nvar reportDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes());\n\nreturn reportDate > lastReportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 601,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Metadata",
        "debugMode": false,
        "configuration": {
          "jsScript": "metadata.targetDeviceName = 'Unit Test';\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 877,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateRelationNode",
        "name": "Change to Unit Test",
        "debugMode": false,
        "configuration": {
          "direction": "TO",
          "relationType": "META",
          "entityType": "ASSET",
          "entityNamePattern": "${targetDeviceName}",
          "entityTypePattern": "TEST",
          "entityCacheExpiration": 300,
          "createEntityIfNotExists": false,
          "changeOriginatorToRelatedEntity": true,
          "removeCurrentRelations": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1151,
          "layoutY": 351
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Last Report Date",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [],
          "latestTsKeyNames": [
            "lastReportDate"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1426,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Last Report Date",
        "debugMode": false,
        "configuration": {
          "jsScript": "if (!metadata.lastReportDate) {\n    return true;\n}\n\nvar lastReportDate = parseInt(metadata.lastReportDate);\nvar reportDate = parseInt(metadata.reportDate);\n\nreturn reportDate > lastReportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1701,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetTelemetryNode",
        "name": "Get Latest Value by Period",
        "debugMode": false,
        "configuration": {
          "startInterval": 2,
          "endInterval": 1,
          "startIntervalPattern": "${reportStart}",
          "endIntervalPattern": "${reportEnd}",
          "useMetadataIntervalPatterns": true,
          "startIntervalTimeUnit": "MINUTES",
          "endIntervalTimeUnit": "MINUTES",
          "fetchMode": "LAST",
          "orderBy": "ASC",
          "latestTsKeyNames": [
            "row_id",
            "name",
            "bool",
            "integer",
            "float",
            "double",
            "hex"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1976,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Report Message",
        "debugMode": false,
        "configuration": {
          "jsScript": "msg = {};\n\nif (metadata.row_id) {\n    msg.minutely_row_id = parseInt(JSON.parse(metadata.row_id));\n}\n\nif (metadata.name) {\n    msg.minutely_name = JSON.parse(metadata.name);\n}\n\nif (metadata.bool) {\n    msg.minutely_bool = JSON.parse(metadata.bool) === 'true';\n}\n\nif (metadata.integer) {\n    msg.minutely_integer = parseInt(JSON.parse(metadata.integer));\n}\n\nif (metadata.float) {\n    msg.minutely_float = parseFloat(JSON.parse(metadata.float));\n}\n\nif (metadata.double) {\n    msg.minutely_double = parseFloat(JSON.parse(metadata.double));\n}\n\nif (metadata.hex) {\n    msg.minutely_hex = JSON.parse(metadata.hex);\n}\n\nmsg.lastReportDate = Date.now();\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2251,
          "layoutY": 350
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Telemetry",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 599,
          "layoutY": 426
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Last Report Date",
        "debugMode": false,
        "configuration": {
          "jsScript": "msg = {\n    lastReportDateUnitTest: Date.now()\n};\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 875,
          "layoutY": 425
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Telemetry",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "Success"
      },
      {
        "fromIndex": 1,
        "toIndex": 6,
        "type": "Report Unit Test"
      },
      {
        "fromIndex": 1,
        "toIndex": 13,
        "type": "Report Metadata"
      },
      {
        "fromIndex": 2,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 3,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 4,
        "toIndex": 5,
        "type": "True"
      },
      {
        "fromIndex": 5,
        "toIndex": 0,
        "type": "True"
      },
      {
        "fromIndex": 6,
        "toIndex": 7,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 8,
        "type": "Success"
      },
      {
        "fromIndex": 8,
        "toIndex": 9,
        "type": "Success"
      },
      {
        "fromIndex": 9,
        "toIndex": 10,
        "type": "True"
      },
      {
        "fromIndex": 10,
        "toIndex": 11,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 12,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 14,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}