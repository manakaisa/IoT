{
  "ruleChain": {
    "additionalInfo": {
      "description": "- Generate periodic summation data for Workgroup: daily_all_count_in, daily_all_count_success\n- Save lastReportDate to Metadata"
    },
    "name": "Report Workgroup",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 5,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 1101,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateRelationNode",
        "name": "Change to Workgroup",
        "debugMode": false,
        "configuration": {
          "direction": "TO",
          "relationType": "META",
          "entityType": "ASSET",
          "entityNamePattern": "${targetDeviceName}",
          "entityTypePattern": "WORKGROUP",
          "entityCacheExpiration": 300,
          "createEntityIfNotExists": false,
          "changeOriginatorToRelatedEntity": true,
          "removeCurrentRelations": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2475,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Telemetry",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 2199,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Report Message",
        "debugMode": false,
        "configuration": {
          "jsScript": "var newMsg = {};\n\nif (metadata.all_count_in) {\n    //newMsg.daily_all_count_in = parseInt(JSON.parse(metadata.all_count_in));\n    newMsg.hourly_all_count_in = parseInt(JSON.parse(metadata.all_count_in));\n}\nif (metadata.all_count_success) {\n    //newMsg.daily_all_count_success = parseInt(JSON.parse(metadata.all_count_success));\n    newMsg.hourly_all_count_success = parseInt(JSON.parse(metadata.all_count_success));\n}\nif (metadata.all_count_fail) {\n    //newMsg.daily_all_count_fail = parseInt(JSON.parse(metadata.all_count_fail));\n    newMsg.hourly_all_count_fail = parseInt(JSON.parse(metadata.all_count_fail));\n}\n\nnewMsg.lastReportDate = Date.now();\n\nreturn {msg: newMsg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1650,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Last Report Date",
        "debugMode": false,
        "configuration": {
          "jsScript": "if (!metadata.lastReportDate) {\n    return true;\n}\n\nvar lastReportDate = parseInt(metadata.lastReportDate);\nvar reportDate = parseInt(metadata.reportDate);\n\nreturn reportDate > lastReportDate;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1375,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Last Report Date",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [],
          "latestTsKeyNames": [
            "lastReportDate"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 275,
          "layoutY": 149
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Switch Report Type",
        "debugMode": false,
        "configuration": {
          "jsScript": "return ['Report Workgroup', 'Report Metadata'];"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1925,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetTelemetryNode",
        "name": "Get Latest Value by Period",
        "debugMode": false,
        "configuration": {
          "startInterval": 2,
          "endInterval": 1,
          "startIntervalPattern": "${reportStart}",
          "endIntervalPattern": "${reportEnd}",
          "useMetadataIntervalPatterns": true,
          "startIntervalTimeUnit": "MINUTES",
          "endIntervalTimeUnit": "MINUTES",
          "fetchMode": "LAST",
          "orderBy": "ASC",
          "latestTsKeyNames": [
            "all_count_in",
            "all_count_success",
            "all_count_fail"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 549,
          "layoutY": 226
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Last Report Date",
        "debugMode": false,
        "configuration": {
          "jsScript": "msg = {\n    lastReportDate: Date.now()\n};\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 824,
          "layoutY": 224
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Telemetry",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 825,
          "layoutY": 149
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Set Metadata",
        "debugMode": false,
        "configuration": {
          "jsScript": "metadata.targetDeviceName = metadata.ss_workgroup;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 550,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Configuration",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "workgroup"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": false
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 2,
        "toIndex": 1,
        "type": "Success"
      },
      {
        "fromIndex": 3,
        "toIndex": 6,
        "type": "True"
      },
      {
        "fromIndex": 4,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 10,
        "type": "Report Workgroup"
      },
      {
        "fromIndex": 5,
        "toIndex": 7,
        "type": "Report Metadata"
      },
      {
        "fromIndex": 6,
        "toIndex": 2,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 8,
        "type": "Success"
      },
      {
        "fromIndex": 9,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 9,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}